Description: CloudFormation template for creating Cognito, S3, DynamoDB, Load Balancer, Security Groups, Target Groups for CAB432 assessment
Resources:
  SecretsManagerSecret00secretn11670339assessment26fDmDo00tGkCY:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::SecretsManager::Secret"
    DeletionPolicy: "Retain"
    Properties:
      ReplicaRegions: []
      Description: "Access to AWS services"
      Tags:
      - Value: "n11670339@qut.edu.au"
        Key: "qut-username"
      - Value: "assessment-2"
        Key: "purpose"
      Name: "n11670339-assessment-2"
  EC2Subnet00subnet01493e3c14963ddfc00tGaGj:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId: "vpc-007bab53289655834"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse2-az3"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "172.31.17.128/25"
      Ipv6Native: false
      Tags:
      - Value: "RDS-Pvt-subnet-4"
        Key: "Name"
  S3Bucket00n11670339a100O36Ss:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Retain"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: "n11670339-a1"
      CorsConfiguration:
        CorsRules:
        - MaxAge: 3000
          ExposedHeaders:
          - "ETag"
          AllowedMethods:
          - "GET"
          - "HEAD"
          - "POST"
          - "PUT"
          - "DELETE"
          AllowedOrigins:
          - "*"
          AllowedHeaders:
          - "*"
      OwnershipControls:
        Rules:
        - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
          ServerSideEncryptionByDefault:
            SSEAlgorithm: "AES256"
      Tags:
      - Value: "n11670339@qut.edu.au"
        Key: "qut-username"
      - Value: "assessment-2"
        Key: "purpose"
  EC2SecurityGroup00sg04ba0fa30d603d1ca00fqNEm:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::SecurityGroup"
    DeletionPolicy: "Retain"
    Properties:
      GroupDescription: "Custom Security Group for Assessment"
      GroupName: "n11670339-assessment-sg"
      VpcId: "vpc-007bab53289655834"
      SecurityGroupIngress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "tcp"
        FromPort: 3000
        ToPort: 3000
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
      SecurityGroupEgress:
      - CidrIp: "0.0.0.0/0"
        IpProtocol: "-1"
        FromPort: -1
        ToPort: -1
      Tags:
      - Value: "assessment"
        Key: "purpose"
      - Value: "n11670339@qut.edu.au"
        Key: "qut-username"
  DynamoDBTable00n11670339a1files00TBSVk:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::DynamoDB::Table"
    DeletionPolicy: "Retain"
    Properties:
      SSESpecification:
        SSEEnabled: false
      TableName: "n11670339-a1-files"
      AttributeDefinitions:
      - AttributeType: "S"
        AttributeName: "fileId"
      - AttributeType: "S"
        AttributeName: "qut-username"
      BillingMode: "PROVISIONED"
      ProvisionedThroughput:
        WriteCapacityUnits: 5
        ReadCapacityUnits: 5
      KeySchema:
      - KeyType: "HASH"
        AttributeName: "qut-username"
      - KeyType: "RANGE"
        AttributeName: "fileId"
      DeletionProtectionEnabled: false
      Tags: []
      TimeToLiveSpecification:
        Enabled: false
  EC2Subnet00subnet05e25252efe68155300KyQmn:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId: "vpc-007bab53289655834"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse2-az1"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "172.31.17.0/25"
      Ipv6Native: false
      Tags:
      - Value: "RDS-Pvt-subnet-3"
        Key: "Name"
  EC2Subnet00subnet0ff6b775db80fd21200xfE7o:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::EC2::Subnet"
    DeletionPolicy: "Retain"
    Properties:
      VpcId: "vpc-007bab53289655834"
      MapPublicIpOnLaunch: false
      EnableDns64: false
      AvailabilityZoneId: "apse2-az2"
      PrivateDnsNameOptionsOnLaunch:
        EnableResourceNameDnsARecord: false
        HostnameType: "ip-name"
        EnableResourceNameDnsAAAARecord: false
      CidrBlock: "172.31.134.128/25"
      Ipv6Native: false
      Tags:
      - Value: "RDS-Pvt-subnet-45"
        Key: "Name"
  ElasticLoadBalancingV2LoadBalancer00loadbalancerappn1167033930fa95084371453300q82CG:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    DeletionPolicy: "Retain"
    Properties:
      IpAddressType: "ipv4"
      SecurityGroups:
      - "sg-04ba0fa30d603d1ca"
      LoadBalancerAttributes:
      - Value: ""
        Key: "access_logs.s3.prefix"
      - Value: "append"
        Key: "routing.http.xff_header_processing.mode"
      - Value: "true"
        Key: "routing.http2.enabled"
      - Value: "false"
        Key: "waf.fail_open.enabled"
      - Value: ""
        Key: "connection_logs.s3.bucket"
      - Value: "false"
        Key: "access_logs.s3.enabled"
      - Value: "defensive"
        Key: "routing.http.desync_mitigation_mode"
      - Value: ""
        Key: "connection_logs.s3.prefix"
      - Value: "false"
        Key: "routing.http.x_amzn_tls_version_and_cipher_suite.enabled"
      - Value: "false"
        Key: "routing.http.preserve_host_header.enabled"
      - Value: "true"
        Key: "load_balancing.cross_zone.enabled"
      - Value: "false"
        Key: "routing.http.xff_client_port.enabled"
      - Value: ""
        Key: "access_logs.s3.bucket"
      - Value: "false"
        Key: "deletion_protection.enabled"
      - Value: "3600"
        Key: "client_keep_alive.seconds"
      - Value: "false"
        Key: "routing.http.drop_invalid_header_fields.enabled"
      - Value: "false"
        Key: "connection_logs.s3.enabled"
      - Value: "60"
        Key: "idle_timeout.timeout_seconds"
      Subnets:
      - Ref: "EC2Subnet00subnet01493e3c14963ddfc00tGaGj"
      - Ref: "EC2Subnet00subnet05e25252efe68155300KyQmn"
      - Ref: "EC2Subnet00subnet0ff6b775db80fd21200xfE7o"
      Type: "application"
      Scheme: "internet-facing"
      EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic: ""
      Tags:
      - Value: "n11670339@qut.edu.au"
        Key: "qut-username"
      - Value: "assessment-2"
        Key: "purpose"
      Name: "n11670339"
      SubnetMappings:
      - SubnetId:
          Ref: "EC2Subnet00subnet0ff6b775db80fd21200xfE7o"
      - SubnetId:
          Ref: "EC2Subnet00subnet01493e3c14963ddfc00tGaGj"
      - SubnetId:
          Ref: "EC2Subnet00subnet05e25252efe68155300KyQmn"
  ElasticLoadBalancingV2Listener00listenerappn1167033930fa95084371453392fc0b6db6114a7a00hzTrE:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    DeletionPolicy: "Retain"
    Properties:
      MutualAuthentication:
        Mode: "off"
      SslPolicy: "ELBSecurityPolicy-TLS13-1-2-2021-06"
      LoadBalancerArn:
        Ref: "ElasticLoadBalancingV2LoadBalancer00loadbalancerappn1167033930fa95084371453300q82CG"
      DefaultActions:
      - TargetGroupArn:
          Ref: "ElasticLoadBalancingV2TargetGroup00targetgroupn11670339dff3028d5720c40700pCvrZ"
        Type: "forward"
        ForwardConfig:
          TargetGroupStickinessConfig:
            Enabled: false
          TargetGroups:
          - TargetGroupArn:
              Ref: "ElasticLoadBalancingV2TargetGroup00targetgroupn11670339dff3028d5720c40700pCvrZ"
            Weight: 1
      Port: 443
      Certificates:
      - CertificateArn: "arn:aws:acm:ap-southeast-2:901444280953:certificate/15bee52a-bdf1-42e9-985c-1f0206cb267b"
      Protocol: "HTTPS"
  ElasticLoadBalancingV2TargetGroup00targetgroupn11670339dff3028d5720c40700pCvrZ:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    DeletionPolicy: "Retain"
    Properties:
      IpAddressType: "ipv4"
      HealthCheckIntervalSeconds: 30
      Matcher:
        HttpCode: "200"
      HealthCheckPath: "/"
      Port: 3000
      Targets:
      - Port: 3000
        Id: "i-0b13ae7029f5862d8"
      HealthCheckEnabled: true
      ProtocolVersion: "HTTP1"
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      Name: "n11670339"
      VpcId: "vpc-007bab53289655834"
      HealthyThresholdCount: 5
      HealthCheckProtocol: "HTTP"
      TargetGroupAttributes:
      - Value: "lb_cookie"
        Key: "stickiness.type"
      - Value: "86400"
        Key: "stickiness.app_cookie.duration_seconds"
      - Value: "1"
        Key: "target_group_health.dns_failover.minimum_healthy_targets.count"
      - Value: "use_load_balancer_configuration"
        Key: "load_balancing.cross_zone.enabled"
      - Value: "86400"
        Key: "stickiness.lb_cookie.duration_seconds"
      - Value: "off"
        Key: "target_group_health.dns_failover.minimum_healthy_targets.percentage"
      - Value: "false"
        Key: "stickiness.enabled"
      - Value: "off"
        Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.percentage"
      - Value: "0"
        Key: "slow_start.duration_seconds"
      - Value: "300"
        Key: "deregistration_delay.timeout_seconds"
      - Value: "1"
        Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.count"
      - Value: "off"
        Key: "load_balancing.algorithm.anomaly_mitigation"
      - Value: ""
        Key: "stickiness.app_cookie.cookie_name"
      - Value: "round_robin"
        Key: "load_balancing.algorithm.type"
      TargetType: "instance"
      HealthCheckPort: "traffic-port"
      Protocol: "HTTP"
      Tags:
      - Value: "n11670339@qut.edu.au"
        Key: "qut-username"
      - Value: "assessment-2"
        Key: "purpose"
  # Cognito User Pool
  MyCognitoUserPool:
    UpdateReplacePolicy: "Retain"
    Type: AWS::Cognito::UserPool
    DeletionPolicy: "Retain"
    Properties:
      UserPoolId: "ap-southeast-2_a1qpts4wB"
      UserPoolName: "n11670339-cognito-a2"
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          TemporaryPasswordValidityDays: 7
      AutoVerifiedAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      MfaConfiguration: "OFF"
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate:
          - email
      VerificationMessageTemplate:
        DefaultEmailOption: "CONFIRM_WITH_CODE"
      EmailConfiguration:
        EmailSendingAccount: "COGNITO_DEFAULT"
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: "verified_email"
            Priority: 1
      UserPoolTags:
        purpose: "assessment-2"
        qut-username: "n11670339@qut.edu.au"

  # Federated Identity Provider (Google)
  MyCognitoGoogleIdentityProvider:
    UpdateReplacePolicy: "Retain"
    Type: AWS::Cognito::UserPoolIdentityProvider
    DependsOn: MyCognitoUserPool
    DeletionPolicy: "Retain"
    Properties:
      UserPoolId: !Ref MyCognitoUserPool
      ProviderName: "Google"
      ProviderType: "Google"
      UserPoolId: !Ref MyCognitoUserPool
      ProviderDetails:
        client_id: "894795278879-pbbcn0q0q4v3p9bh579cr5f58r9pk60p.apps.googleusercontent.com" 
        client_secret: "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"
        authorize_scopes: "email profile openid"
      AttributeMapping:
        email: "email"

  # Cognito User Pool Client
  MyCognitoUserPoolClient:
    UpdateReplacePolicy: "Retain"
    Type: AWS::Cognito::UserPoolClient
    DependsOn: MyCognitoGoogleIdentityProvider
    DeletionPolicy: "Retain"
    Properties:
      UserPoolId: !Ref MyCognitoUserPool
      ClientName: "n11670339-cognito-video-transcoding-app"
      AllowedOAuthFlows:
        - implicit
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      SupportedIdentityProviders:
        - COGNITO
        - Google
      ExplicitAuthFlows:
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_PASSWORD_AUTH
      CallbackURLs:
        - "https://n11670339alb.cab432.com"
      LogoutURLs:
        - "https://n11670339alb.cab432.com"
      PreventUserExistenceErrors: "ENABLED"
      EnableTokenRevocation: true
      AuthSessionValidity: 3
      RefreshTokenValidity: 30
      AccessTokenValidity: 60
      IdTokenValidity: 60
      TokenValidityUnits:
        AccessToken: "minutes"
        IdToken: "minutes"
        RefreshToken: "days"

  # Cognito User Pool Domain (Hosted UI)
  # MyCognitoUserPoolDomain:
  #   UpdateReplacePolicy: "Retain"
  #   Type: AWS::Cognito::UserPoolDomain
  #   DeletionPolicy: "Retain"
  #   Properties:
  #     Domain: "n11670339"
  #     UserPoolId: !Ref MyCognitoUserPool